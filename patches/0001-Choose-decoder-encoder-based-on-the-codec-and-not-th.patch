From 69ec774ea202d74f20891bf0e6adae89d1b61fb7 Mon Sep 17 00:00:00 2001
From: marcelpaulo <marcelpaulo@gmail.com>
Date: Mon, 26 Mar 2018 15:56:19 -0300
Subject: [PATCH] Choose decoder/encoder based on the codec and not the file
 extension: for m4a files, get the codec with Audio::Scan; for the others, use
 the extension as the codec

---
 codecs.conf |  3 +--
 pacpl.in    | 73 +++++++++++++++++++++++++++++++++++++++++++++----------------
 2 files changed, 55 insertions(+), 21 deletions(-)

diff --git a/codecs.conf b/codecs.conf
index dffc4ea..5d6b47d 100644
--- a/codecs.conf
+++ b/codecs.conf
@@ -48,11 +48,10 @@ FLAC = flac,flac
 
 FLA = flac,flac
 
-# MP4 / M4A #
+# MP4 #
 # E: faac, ffmpeg, avconv
 # E: faad, ffmpeg, avconv, mplayer
 
-M4A = faac,faad
 MP4 = faac,faad
 
 # MP3 #
diff --git a/pacpl.in b/pacpl.in
index 611bb2d..3267448 100644
--- a/pacpl.in
+++ b/pacpl.in
@@ -81,7 +81,7 @@ my
 
 # name, version
 my $name      = "Perl Audio Converter";
-my $version   = "6.0";
+my $version   = "6.1";
 
 # If these options are toggled,  messages/errors will be displayed 
 # via kdialog or zenity/notify-send (depending on environment)
@@ -1333,7 +1333,8 @@ my $pm = Parallel::ForkManager->new($jobs);
                            },
                },
 
-       m4a  => {
+       # m4a container with AAC codec
+       mp4a  => {
 
                 DEFAULT_ENCODER => "faac",
                 DEFAULT_DECODER => "faad",
@@ -1403,18 +1404,50 @@ my $pm = Parallel::ForkManager->new($jobs);
                                        DSTR => sub { "-vc null -vo null -ao pcm:file=%o %i" },
                                      },
                                       
+                           },
+
+                ESTR    => sub { "$eopts -w -q $aacqual %i -o %o" },
+
+                TAGS    => {
+                             READ   => 1,
+                             WRITE  => 1,
+                             MODULE => "Audio::Scan",
+                           },
+               },
+
+       # m4a container with ALAC codec
+       alac  => {
+
+                DEFAULT_ENCODER => undef,
+                DEFAULT_DECODER => "alac-decoder",
+                
+                DECODER => {
+                                      
 		   'alac-decoder' => {
                                        NAME => "alac-decoder",
                                        DSTR => sub { "$dopts -f %o %i" },
                                      },
+                                       
+                           ffmpeg => {
+                                       NAME => "ffmpeg", 
+                                       DSTR => sub { "$dopts -y -i %i %o" },
+                                     },
+                                     
+                           avconv => {
+                                       NAME => 'avconv',
+                                       DSTR => sub { "$dopts -y -i %i %o" },
+                                     },
+
+                          mplayer => {
+                                       NAME => "mplayer",
+                                       DSTR => sub { "-vc null -vo null -ao pcm:file=%o %i" },
+                                     },
                                       
                            },
 
-                ESTR    => sub { "$eopts -w -q $aacqual %i -o %o" },
-
                 TAGS    => {
                              READ   => 1,
-                             WRITE  => 1,
+                             WRITE  => 0,
                              MODULE => "Audio::Scan",
                            },
                },
@@ -2347,7 +2380,8 @@ sub proc_files {
                    $decoder = $my_decoder if defined($my_decoder);
                    
                    $encoder = $run{$to}{DEFAULT_ENCODER} if not $my_encoder;
-                   $decoder = $run{$if}{DEFAULT_DECODER} if not $my_decoder;
+		   my $codec = ( $if eq "m4a" ? Audio::Scan->scan_info($i)->{info}->{tracks}[0]->{encoding} : $if );
+                   $decoder = $run{$codec}{DEFAULT_DECODER} if not $my_decoder;
               
                if (-e "$dir/$file.$to" and not $overwrite) {
                    pnotice("overwrite","$file.$to",1);
@@ -2355,10 +2389,10 @@ sub proc_files {
                    next;
                }
                                                                                                    
-               if (check_input($file,$dir,$if) == 0) {
+               if (check_input($file,$dir,$codec) == 0) {
                    
                    pnotice("unk_encoder","$file.$ext",1), next unless(exists($run{$to}{ENCODER}{$encoder}));
-                   pnotice("unk_decoder","$file.$ext",1), next unless(exists($run{$if}{DECODER}{$decoder}));
+                   pnotice("unk_decoder","$file.$ext",1), next unless(exists($run{$codec}{DECODER}{$decoder}));
               
                    get_visual_opts($to,$outdir) if $gui and not defined($first_run);
                    
@@ -2378,6 +2412,7 @@ sub proc_files {
                             $files{"FILE$number"}{FILE} = "$dir/$file";
                             $files{"FILE$number"}{OUTF} = "$outdir/$outfile";
                             $files{"FILE$number"}{EXT}  = "$ext";
+                            $files{"FILE$number"}{CODEC}  = "$codec";
                             $files{"FILE$number"}{NAME} = "$file";
                             $files{"FILE$number"}{OUTD} = "$outfile";
                             $files{"FILE$number"}{DECODER} = "$decoder";
@@ -2497,7 +2532,7 @@ find ( sub {
 # convert input to destination format
 sub convert {
 
-    my ($inf, $outf, $infmt, $iname, $oname, $dec) = @_;
+    my ($inf, $outf, $infmt, $iname, $oname, $codec, $dec) = @_;
 
     my $if = $infmt;
        $if =~ tr/A-Z/a-z/;
@@ -2514,17 +2549,17 @@ sub convert {
        # that supports the desired input/output formats.
        $decoder = $dec;
        check_encoder();
-       check_decoder($infmt);
+       check_decoder($codec);
                          
-    my $decode_string = $run{$if}{DECODER}{$decoder}{DSTR}->();
+    my $decode_string = $run{$codec}{DECODER}{$decoder}{DSTR}->();
        $decode_string =~ s/%i/\"$inf.$infmt\"/;
        $decode_string =~ s/%o/\"$outf.$$.wav\"/;
        $decode_string =~ s/(\$|\\)/\\$1/g;
 
-       pnotice("debug","\n$run{$if}{DECODER}{$decoder}{NAME} $decode_string", 2) if $dryrun;
+       pnotice("debug","\n$run{$codec}{DECODER}{$decoder}{NAME} $decode_string", 2) if $dryrun;
 
        # decode input file to temporary wav
-       system("$run{$if}{DECODER}{$decoder}{NAME} $decode_string $silent") if not $dryrun;
+       system("$run{$codec}{DECODER}{$decoder}{NAME} $decode_string $silent") if not $dryrun;
 
        # remove temporary wav file and die if decode fails
        if ($? > 0) {
@@ -2540,7 +2575,7 @@ sub convert {
        system("normalize $nopts \"$outf.$$.wav\"") if $normalize;
 
        # copy meta-data from input file to %tag_name 
-       read_tags("$inf.$infmt", "$if") if $run{$if}{TAGS}{READ} == 1 and not $dryrun;
+       read_tags("$inf.$infmt", "$codec") if $run{$codec}{TAGS}{READ} == 1 and not $dryrun;
 
     my $tag_opts = format_tags($to); # tag options for mp4/m4a/m4b/mpc/mpp/bonk/spx/wv
     
@@ -2605,7 +2640,7 @@ sub fork_files {
         say "$msg" if not $gui;        
         system("kdialog --icon $icon_path --title \"$name\" --passivepopup \"$msg\" 10 &") if $gui and $kde;
         system("notify-send \"$name\" \"$msg\" -t 35 -i $icon_path &") if $gui and $gnome;                          
-        convert("$files{$_}{FILE}","$files{$_}{OUTF}","$files{$_}{EXT}","$files{$_}{NAME}","$files{$_}{OUTD}","$files{$_}{DECODER}");
+        convert("$files{$_}{FILE}","$files{$_}{OUTF}","$files{$_}{EXT}","$files{$_}{NAME}","$files{$_}{OUTD}","$files{$_}{CODEC}","$files{$_}{DECODER}");
         $pm->finish;
     }            
 
@@ -2653,12 +2688,12 @@ sub check_input {
 
      my $file = shift;
      my $dir  = shift;
-     my $ext  = shift;
+     my $codec  = shift;
 
      perror("no_encoder","$to") unless(defined($run{$to}{ENCODER}));
 
-     unless(defined($run{$ext}{DECODER})) {
-         pnotice("no_decoder","$ext",2) if $verbose or not $only;
+     unless(defined($run{$codec}{DECODER})) {
+         pnotice("no_decoder","$codec",2) if $verbose or not $only;
          $total_failed++;
          return 1;
      }
@@ -2940,7 +2975,7 @@ sub read_tags {
                                         return 0;
                                 }
 
-     when (/^mp4$|^m4a$|^m4b$/) {    
+     when (/^(mp4|m4b|alac|mp4a)$/) {    
                                         my $mp4_tag = $tag_module->scan_tags($in_file)->{tags};
 
                                            $tag_name{title}   = $mp4_tag->{NAM}    if $mp4_tag->{NAM};
-- 
2.14.1

